Broadly, the Standard Template Library has four components:

# Algorithms [Built on templates, to manipulate data within containers]

# Functors [Objects that behave like regular functions]
  -Functors can be substituted in place of function pointers!
  -Functors are handy objects that let you extend/complement the behavior of STL function
    without compromising the object-oriented coding principles.

# Iterators [Design patterns to navigate the containers]
  +Input iterators
      -used to read from the pointed element.
      (e.g. istream_iterator)
  +Output iterators
      -used to modify the pointed element.
      (e.g. ostream_iterator, back_inserter, front_inserter)
  +Forward iterators
      (forward_list container suports forward iterators)
  +Bidirectional iterators
      (list, set, map, multiset, and multimap containers support this)
  +Random-access iterators
      (array, vector, and deque containers support this type of iterator)

# Containers [Typically objects that grow and shrink dynamically]
    -Container "flavors" are:
    +Sequential
    +Associative
    +Container Adapters
